name: Build and Deploy on Release

# Trigger when a release is published
on:
  release:
    types: [published]

jobs:
  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      # Step 1: Checkout the chemical bootstrap repository
      - name: Checkout chemical-bootstrap repository
        uses: actions/checkout@v3
        with:
          repository: chemicallang/chemical-bootstrap
          token: ${{ secrets.GITHUB_TOKEN }}
          path: chemical-bootstrap

      # Step 2: Checkout chemical repository inside the chemical-bootstrap
      - name: Checkout chemical repository inside chemical-bootstrap
        uses: actions/checkout@v3
        with:
          repository: chemicallang/chemical
          token: ${{ secrets.GITHUB_TOKEN }}
          path: chemical-bootstrap/chemical

      # Step 2: Setup developer command prompt (as build.bat requires it)
      - name: Set up Visual Studio Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86_64

      # Step: Setup Cache for out-win folder
      - uses: actions/cache@v2
        id: bootstrap-cache
        with:
          path: ./chemical-bootstrap/out-win/
          key: ${{ runner.os }}-${{ github.sha }}

      # Step 3: Build the chemical-bootstrap project (only if not cached)
      - name: Build chemical-bootstrap (Windows)
        working-directory: chemical-bootstrap
        run: .\build.bat native-windows-gnu native
        if: steps.bootstrap-cache.outputs.cache-hit != 'true'

      # Step 4: Build the chemical project executables via CMake
      - name: Build chemical project (Windows)
        working-directory: chemical-bootstrap/chemical
        run: |
          mkdir out\release
          rem Configure using CMake (using a Visual Studio generator; adjust if needed)
          cmake -S . -B out\build\x64-release -A x64 -DCMAKE_BUILD_TYPE=Release
          cmake --build out\build\x64-release --config Release --target Compiler
          cmake --build out\build\x64-release --config Release --target TCCCompiler
          cmake --build out\build\x64-release --config Release --target ChemicalLsp || true

      # Step 5: Run the release script to create ZIP files
      - name: Run release packaging script (Windows)
        working-directory: chemical-bootstrap/chemical
        # Assuming Git Bash is available on windows-latest (if not, you might need to install/setup MSYS2)
        run: bash release.sh

      # Step 6: Upload the Windows ZIP files to the GitHub Release
      - name: Upload windows-x64.zip to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: windows-x64.zip
          files: chemical-bootstrap/chemical/out/release/windows-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload windows-x64-tcc.zip to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: windows-x64-tcc.zip
          files: chemical-bootstrap/chemical/out/release/windows-x64-tcc.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:

      # Step 1: Checkout the chemical bootstrap repository
      - name: Checkout chemical-bootstrap repository
        uses: actions/checkout@v3
        with:
          repository: chemicallang/chemical-bootstrap
          token: ${{ secrets.GITHUB_TOKEN }}
          path: chemical-bootstrap

      # Step 2: Checkout chemical repository inside the chemical-bootstrap
      - name: Checkout chemical repository inside chemical-bootstrap
        uses: actions/checkout@v3
        with:
          repository: chemicallang/chemical
          token: ${{ secrets.GITHUB_TOKEN }}
          path: chemical-bootstrap/chemical

      # Step 3: Install required dependencies (cmake, build tools, Boost, git, etc.)
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git libboost-all-dev

      # Step: Setup Cache for out folder
      - uses: actions/cache@v2
        id: bootstrap-cache
        with:
          path: ./chemical-bootstrap/out/
          key: ${{ runner.os }}-${{ github.sha }}

      # Step 4: Build the chemical-bootstrap project (Linux) (only if not cached)
      - name: Build chemical-bootstrap (Linux)
        working-directory: chemical-bootstrap
        run: |
          chmod +x build
          ./build native-linux-gnu native
        if: steps.bootstrap-cache.outputs.cache-hit != 'true'

      # Step 5: Build the chemical project executables via CMake
      - name: Build chemical project (Linux)
        working-directory: chemical-bootstrap/chemical
        run: |
          mkdir -p out/release
          cmake -S . -B out/build/x64-release -DCMAKE_BUILD_TYPE=Release
          cmake --build out/build/x64-release --config Release --target Compiler
          cmake --build out/build/x64-release --config Release --target TCCCompiler
          cmake --build out/build/x64-release --config Release --target ChemicalLsp || true

      # Step 6: Run the release packaging script to create ZIP files
      - name: Run release packaging script (Linux)
        working-directory: chemical-bootstrap/chemical
        run: |
          chmod +x release.sh
          ./release.sh

      # Step 7: Upload the Linux ZIP files to the GitHub Release
      - name: Upload linux-x86-64.zip to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: linux-x86-64.zip
          files: chemical-bootstrap/chemical/out/release/linux-x86-64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload linux-x86-64-tcc.zip to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: linux-x86-64-tcc.zip
          files: chemical-bootstrap/chemical/out/release/linux-x86-64-tcc.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}