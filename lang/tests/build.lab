import "./std/std.lab" as stdlab
import "./basic/build.lab" as basic

const name = "ChemicalTests"
const type = "lib"
const version = "1.0.0"

enum ArtifactType {
    App,
    Lib,
    CLib
}

struct BuildContext {


}

struct Artifact {
    name : string
    type : ArtifactType
    dependencies : vector<Artifact>
}

struct CLibraryArtifact : Artifact {

}

func build(ctx : BuildContext*) : Artifact {

    Artifact artifact;

    artifact.paths.push(string("./comptime"))
    artifact.paths.push(string("./basic"))
    artifact.paths.push(string("./nodes"))

    artifact.dependencies.push(stdlab.build(ctx));
    artifact.dependencies.push(basic.build(ctx));

    return artifact;


    const stdlib : ChemLib* = ctx.import("std", "../std")

    const basic : ChemLib* = ctx.lib("basic", "./basic", { stdlib })

    ctx.lib_from("comptime", { "./comptime/basic.ch", "./comptime/vector.ch" })

    // importing a c library
    ctx.include_c_headers("./cfold/**/*.h")
    ctx.include_c_sources("./cfold/**/*.c")

}